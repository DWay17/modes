<?xml version="1.0"?>
<!DOCTYPE MODE SYSTEM "xmode.dtd">
<MODE>
	<PROPS>
		<PROPERTY NAME="folding" VALUE="custom"/>
	</PROPS>
	<RULES DEFAULT="COMMENT3" HIGHLIGHT_DIGITS="FALSE" IGNORE_CASE="TRUE">
		<SEQ_REGEXP TYPE="LABEL">(lost|fehler|errors?|fail(ed)?)[:\s]+0+\b</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="COMMENT2">(test(s)?)[:\s]+0+\b</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="COMMENT1">(lost|fehler|errors?|fail(ed)?)[:\s](([1-9])|([1-9]\d*)|(\d*[1-9]))\b</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="COMMENT1" AT_WORD_START="TRUE">(([a-z_-]+) )*(fail(ed)?|abort(ed)?)</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="COMMENT1" AT_WORD_START="TRUE">(Could )?not (?!(needed|required))\w+</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="COMMENT1" AT_WORD_START="TRUE">couldn't \w+</SEQ_REGEXP>
		<!-- Cannot find -->
		<SEQ_REGEXP TYPE="COMMENT1" AT_WORD_START="TRUE">(Cannot|Illegal) \w+</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="COMMENT2" AT_WORD_START="TRUE">un(?!(less|til|it|iversity|compress|cle\b|ified\w{0,9}))\w+( \w+)?</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="COMMENT2" AT_WORD_START="TRUE">(\w+ )?refused</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="COMMENT2" AT_WORD_START="TRUE">inconsistent</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="COMMENT2" AT_WORD_START="TRUE">missing</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="COMMENT2" AT_WORD_START="TRUE">out of range</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="COMMENT2" AT_WORD_START="TRUE">warn(ing)?</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="COMMENT2" AT_WORD_START="TRUE">Dubious</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="COMMENT4" AT_WORD_START="TRUE">Retrying( \w+)?</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="COMMENT4">(\w+ )?null</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="DIGIT">([a-z]\w+\.)+\w+Exception</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="INVALID" AT_WORD_START="TRUE">(\w+ )?time(d )?out</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="INVALID" AT_WORD_START="TRUE">(\w+ )?err(_|ors?)?\b</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="INVALID" AT_WORD_START="TRUE">crit(ical)?\b</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="INVALID">ORA-\d+[:,].*</SEQ_REGEXP>
		<SEQ TYPE="KEYWORD2">done</SEQ>
		<SEQ_REGEXP TYPE="KEYWORD2">\w+ completed?</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="KEYWORD3" AT_WORD_START="TRUE">inf(o(rmation)?|_)?\b</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="KEYWORD4" AT_WORD_START="TRUE">not(e|ice)</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="OPERATOR" AT_WORD_START="TRUE">duration</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="OPERATOR" AT_WORD_START="TRUE">attention</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="COMMENT4" AT_WORD_START="TRUE">not (\w+)*</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="LABEL">((\w{3,}) ){0,}(?&lt;!not ?)\b(finished|okay|ok|available|done|completed?|success(ful)?)\b(?!\?)</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="LABEL">Looks good</SEQ_REGEXP>
		<SEQ_REGEXP AT_WORD_START="TRUE" TYPE="NULL">start(ing)? \w+</SEQ_REGEXP>
		<SEQ_REGEXP AT_WORD_START="TRUE" TYPE="NULL">stop(ing)? \w+</SEQ_REGEXP>
		<SEQ_REGEXP AT_WORD_START="TRUE" TYPE="NULL">\w{2,}(ing)( \w+)+</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="NULL">Current Version</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="NULL">(required?) \w+</SEQ_REGEXP>
		<SEQ_REGEXP TYPE="COMMENT4">((skipped:( \w+)+)|(\w+ skipped))</SEQ_REGEXP>
		<SEQ TYPE="COMMENT4">skipped</SEQ>
	</RULES>
</MODE>


